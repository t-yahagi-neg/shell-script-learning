#!/bin/bash

# ========================================
# パス名展開
# ========================================

# ----------------------------------------
# 任意の1文字
# ----------------------------------------
ls string.?
# scting.c  string.h
#
# ?は任意の１文字にマッチする

# ----------------------------------------
# 任意の3文字
# ----------------------------------------
ls string.???
# string.txt

# ----------------------------------------
# 末尾が「.txt」のファイル名一覧
# ----------------------------------------
ls *.txt
# file1.txt  file2.txt  file3.txt  file4.txt  string.txt
#
# *は任意の文字列にマッチする

# ----------------------------------------
# cまたはhのいずれかにマッチ
# ----------------------------------------
ls string.[ch]
# string.c  string.h
#
# []の中に複数の文字を書くと、その中のいずれか１文字にマッチする

# ----------------------------------------
# ハイフンで文字範囲の指定をする
# ----------------------------------------
ls file[1-3].txt
# file1.txt  file2.txt  file3.txt
#
# []の中では、ハイフンを入れることで文字範囲での指定もできる
# ハイフン自身をマッチする文字として使用したい場合は、
# [-abc]または[abc-]のようにハイフンを[]の最初または最後に置く

# ----------------------------------------
# file2.txtとfile4.txt以外の文字列にマッチ
# ----------------------------------------
ls file[!24}.txt
# file1.txt  file3.txt
#
# []の先頭に!または^を書くと意味が逆になり、[]の中に含まれていない
# 任意の１文字という意味になる
# []内で!や^自身をマッチする文字として指定したい場合は、[\^]のように\を前に
# つけるか、[abc^]や[abc!]のように^や!を先頭以外に置く
# また[]内で]自身をマッチする文字として指定したい場合は、[]abc]のように、
# [のすぐ後に]を置く

# ----------------------------------------
# 末尾が.cまたは.hのすべてのファイル名にマッチ
# ----------------------------------------
ls *.[ch]
# string.c  string.h

# ----------------------------------------
# マッチするファイル名がないパス名展開
# ----------------------------------------
ls *.jpg
# ls: *.jpg にアクセスできません: そのようなファイルやディレクトリはありません
#
# これはbashではなくlsコマンドによって出力されているエラー
# マッチするファイルが1つもない場合はls *.jpgというコマンドがそのまま実行
# され、lsコマンドはファイルが見つからなかったことをエラーとして出力する
# lsコマンドをechoコマンドに変えると、*.jpgという文字列がそのままコマンドに
# 渡されていることが分かる
echo *.jpg
# *.jpg ← パス名展開されていない

# ----------------------------------------
# ディレクトリを含むパス名展開
# ----------------------------------------
ls /usr/bin/*zip
# /usr/bin/gpg-zip  /usr/bin/gunzip  /usr/bin/gzip
#
# パス名展開はカレントディレクトリだけでなく、パスを指定すれば
# 任意のディレクトリに含まれるファイル名に展開できる。
# zipという文字列で終わるファイル名にフルパスで展開される

# ----------------------------------------
# パス名展開はディレクトリをまたがない
# ----------------------------------------
ls /usr/*zip
# ls: /usr/*zip にアクセスできません: そのようなファイルやディレクトリ
# はありません
#
# パス名展開の*、?、[]という記号はディレクトリ区切りの/を超えてマッチしない

# ----------------------------------------
# ファイル名先頭のドットにはマッチしない
# ----------------------------------------
touch .hidden
ls *hidden
# ls: *hidden にアクセスできません: そのようなファイルやディレクトリは
# ありません
#
# パス名展開の*、?、[]という記号は、隠しファイルで使われるファイル名の先頭に
# 付く.(ドット)にはマッチしません。

# ----------------------------------------
# ファイル名先頭がドットのファイルにマッチさせる
# ----------------------------------------
ls .*en
.hidden
